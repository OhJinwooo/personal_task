1. 첫 페이지
    - 제목, 작성자 이름, 작성 날짜 조회하기
        - Request
            - Method: GET
            - URL: /articles
        - Response
            - Status code: 200
            - Payload: { articleId: number; content: string; authorId: number, title: string}
    - 작성 날짜 내림차순 정렬
    - 게시글 클릭시 게시글 조회페이지로 이동

2. 게시글 작성 페이지
    - 제목, 작성자명, 비밀번호, 작성 내용 입력하기 (post) URL은 동일하게
    - "글쓰기" 버튼 클릭하면 전체 게시글 목록 조회 페이지로 이동
    - 최신 게시글 최상단에 위치함을 확인

3. 게시글 조회 페이지
    - 제목, 작성자명, 작성 날짜, 작성 내용 조회 (검색기능 x 간단한 글 조회만 구현)
        - Request
            - Method: GET
            - URL: /articles
        -Response
            - Status Code: 200
            - Payload: { articleId: number; content: string; authorId: number}

4. 게시글 수정 페이지 
    - Request
        - Method: PUT
        - URL: /articles/:articleId
        - Body: { content: string, title: string }
    - Response
        - HTTP Status Code: 200
        - Payload: { message: string }
    - 작성페이지와 동일 폼, 수정하기 버튼 클릭하면 작성되었던 게시글이
      미리 입력되게 하기
    - 비밀번호란 비워두기
    - "글쓰기"버튼은 없고 "수정 완료","삭제하기" 버튼만 만들기
    - "수정완료" 버튼을 누를 때 입력된 비밀번호를 비교하여 동일할 때만 글이 수정
        - Request
            - Method: PUT
            - URL:
        - Response
            - HTTP Status Code: 200
            - Payload: { message: string}
    - "삭제하기" 버튼을 누를 때 입력된 비밀번호를 비교하여 동일할 때만 글이 수정
        - Request
            - Method: DELETE
            - URL: /articles/:articleId
        - Response
            - HTTP Status Code: 200
            - Payload: { message: string}